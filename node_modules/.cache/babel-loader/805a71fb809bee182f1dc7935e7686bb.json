{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/react-sploosh-amplify/src/components/ModelModal/ModelModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { getModel } from '../../connector/DbConnector';\nimport useComponentState from '../../hooks/useComponentState';\nimport { VideoCard, StyledPagination, Flex } from '../';\nimport './ModelModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModelModal(props) {\n  _s();\n\n  var _videos$records;\n\n  const {\n    state,\n    setState\n  } = useComponentState({\n    page: 1,\n    response: null\n  });\n  const {\n    onClose,\n    selectedId,\n    open\n  } = props;\n  const {\n    page,\n    response\n  } = state;\n\n  const handleClose = () => {\n    onClose(selectedId);\n  };\n\n  const loadModel = React.useCallback(async (id, p) => {\n    const media = await getModel(id, p);\n    console.log({\n      media\n    });\n    setState('response', media);\n    setState('page', p);\n  }, []);\n\n  const handleChange = (event, value) => {\n    loadModel(selectedId, value);\n  };\n\n  React.useEffect(() => {\n    var _response$model;\n\n    const oldId = response === null || response === void 0 ? void 0 : (_response$model = response.model) === null || _response$model === void 0 ? void 0 : _response$model[0].ID;\n    const fresh = !response && !!selectedId;\n    const renew = !!response && selectedId !== oldId;\n    (fresh || renew) && !!selectedId && loadModel(selectedId, 1);\n  }, [response, selectedId]);\n  if (!response) return /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 25\n  }, this);\n  const {\n    model: star,\n    videos\n  } = response;\n  if (!videos) return 'No videos found for this artist.';\n  const totalPages = Math.ceil(videos.count / 30);\n  const model = star[0];\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    classes: {\n      paper: 'model-modal'\n    },\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        mr: 2,\n        children: [!!model.image && /*#__PURE__*/_jsxDEV(Avatar, {\n          src: model.image,\n          alt: model.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          ml: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: model.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: [videos.count, \" videos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPagination, {\n      totalPages: totalPages,\n      page: page,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModelVideoGrid\",\n      children: (_videos$records = videos.records) === null || _videos$records === void 0 ? void 0 : _videos$records.map(video => /*#__PURE__*/_jsxDEV(VideoCard, {\n        small: true,\n        video: video\n      }, video.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModelModal, \"XIoxtQyhOy0a/Rj6goB351c+ItY=\", false, function () {\n  return [useComponentState];\n});\n\n_c = ModelModal;\nexport function useModelModal() {\n  _s2();\n\n  const [modelModalState, setState] = React.useState({\n    open: false\n  });\n\n  const showDialog = selectedId => {\n    setState({\n      open: true,\n      selectedId,\n      onClose: () => setState({\n        open: false\n      })\n    });\n  };\n\n  return {\n    modelModalState,\n    showDialog\n  };\n}\n\n_s2(useModelModal, \"nmx1axAxhMhUficeg6y73r7x5Rk=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelModal\");","map":{"version":3,"sources":["/home/miltonejones/projects/react-sploosh-amplify/src/components/ModelModal/ModelModal.js"],"names":["React","DialogTitle","Dialog","Avatar","Stack","Typography","getModel","useComponentState","VideoCard","StyledPagination","Flex","ModelModal","props","state","setState","page","response","onClose","selectedId","open","handleClose","loadModel","useCallback","id","p","media","console","log","handleChange","event","value","useEffect","oldId","model","ID","fresh","renew","star","videos","totalPages","Math","ceil","count","paper","image","name","records","map","video","useModelModal","modelModalState","useState","showDialog"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { getModel } from '../../connector/DbConnector';\r\nimport useComponentState from '../../hooks/useComponentState';\r\nimport { VideoCard, StyledPagination, Flex } from '../';\r\nimport './ModelModal.css';\r\n\r\nexport default function ModelModal(props) {\r\n  const { state, setState } = useComponentState({ page: 1, response: null });\r\n  const { onClose, selectedId, open } = props;\r\n  const { page, response } = state;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedId);\r\n  };\r\n\r\n  const loadModel = React.useCallback(async (id, p) => {\r\n    const media = await getModel(id, p);\r\n    console.log({ media });\r\n    setState('response', media);\r\n    setState('page', p);\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    loadModel(selectedId, value);\r\n  };\r\n  React.useEffect(() => {\r\n    const oldId = response?.model?.[0].ID;\r\n    const fresh = !response && !!selectedId;\r\n    const renew = !!response && selectedId !== oldId;\r\n    (fresh || renew) && !!selectedId && loadModel(selectedId, 1);\r\n  }, [response, selectedId]);\r\n\r\n  if (!response) return <i />;\r\n\r\n  const { model: star, videos } = response;\r\n  if (!videos) return 'No videos found for this artist.';\r\n  const totalPages = Math.ceil(videos.count / 30);\r\n  const model = star[0];\r\n  return (\r\n    <Dialog\r\n      classes={{ paper: 'model-modal' }}\r\n      onClose={handleClose}\r\n      open={open}\r\n    >\r\n      <DialogTitle>\r\n        <Flex mr={2}>\r\n          {!!model.image && <Avatar src={model.image} alt={model.name} />}\r\n          <Stack ml={2}>\r\n            <Typography variant=\"body1\">{model.name}</Typography>\r\n            <Typography variant=\"caption\">{videos.count} videos</Typography>\r\n          </Stack>\r\n        </Flex>\r\n      </DialogTitle>\r\n      <StyledPagination\r\n        totalPages={totalPages}\r\n        page={page}\r\n        handleChange={handleChange}\r\n      />\r\n      <div className=\"ModelVideoGrid\">\r\n        {videos.records?.map((video) => (\r\n          <VideoCard small key={video.ID} video={video} />\r\n        ))}\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function useModelModal() {\r\n  const [modelModalState, setState] = React.useState({ open: false });\r\n\r\n  const showDialog = (selectedId) => {\r\n    setState({\r\n      open: true,\r\n      selectedId,\r\n      onClose: () => setState({ open: false }),\r\n    });\r\n  };\r\n\r\n  return { modelModalState, showDialog };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}